{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Quiz(props) {\n  const {\n    getQuestions,\n    getAnswers,\n    questions,\n    answers\n  } = props;\n  const [num, setNum] = useState(0);\n  const [choices, setChoices] = useState([]);\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n  }, []);\n\n  if (num < questions.length) {\n    setChoices(answers.filter(answer => {\n      if (answer.question_id === questions[num].id) {\n        return answer.choice;\n      }\n    }));\n  } // useEffect(() => {\n  //   setChoices(\n  //   );\n  // }, [num]);\n\n\n  if (num === questions.length) {\n    return React.createElement(Redirect, {\n      to: \"/results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  } // console.log(choices.map(e => e.choice));\n\n\n  return React.createElement(\"div\", {\n    className: \"quiz-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Quiz\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, questions[num].question), React.createElement(\"ol\", {\n    class: \"list-decimal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, choices.map(answer => React.createElement(\"li\", {\n    key: answer.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, answer.choice))), React.createElement(\"button\", {\n    onClick: () => setNum(num + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Next\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getQuestions,\n  getAnswers\n})(Quiz);","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js"],"names":["React","useState","useEffect","connect","getQuestions","getAnswers","Redirect","Quiz","props","questions","answers","num","setNum","choices","setChoices","length","filter","answer","question_id","id","choice","question","map","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEJ,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BI,IAAAA,SAA5B;AAAuCC,IAAAA;AAAvC,MAAmDF,KAAzD;AACA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY;AACZC,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIM,GAAG,GAAGF,SAAS,CAACM,MAApB,EAA4B;AAC1BD,IAAAA,UAAU,CACRJ,OAAO,CAACM,MAAR,CAAeC,MAAM,IAAI;AACvB,UAAIA,MAAM,CAACC,WAAP,KAAuBT,SAAS,CAACE,GAAD,CAAT,CAAeQ,EAA1C,EAA8C;AAC5C,eAAOF,MAAM,CAACG,MAAd;AACD;AACF,KAJD,CADQ,CAAV;AAOD,GAlBkB,CAmBnB;AACA;AAEA;AACA;;;AAEA,MAAIT,GAAG,KAAKF,SAAS,CAACM,MAAtB,EAA8B;AAC5B,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GA3BkB,CA4BnB;;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,SAAS,CAACE,GAAD,CAAT,CAAeU,QAApB,CAFF,EAGE;AAAI,IAAA,KAAK,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,CAACS,GAAR,CAAYL,MAAM,IACjB;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBF,MAAM,CAACG,MAA5B,CADD,CADH,CAHF,EAYE;AAAQ,IAAA,OAAO,EAAE,MAAMR,MAAM,CAACD,GAAG,GAAG,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,CADF;AAgBD;;AACD,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLf,IAAAA,SAAS,EAAEe,KAAK,CAACf,SADZ;AAELC,IAAAA,OAAO,EAAEc,KAAK,CAACd;AAFV,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAAuDE,IAAvD,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Quiz(props) {\n  const { getQuestions, getAnswers, questions, answers } = props;\n  const [num, setNum] = useState(0);\n  const [choices, setChoices] = useState([]);\n\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n  }, []);\n\n  if (num < questions.length) {\n    setChoices(\n      answers.filter(answer => {\n        if (answer.question_id === questions[num].id) {\n          return answer.choice;\n        }\n      })\n    );\n  }\n  // useEffect(() => {\n  //   setChoices(\n\n  //   );\n  // }, [num]);\n\n  if (num === questions.length) {\n    return <Redirect to=\"/results\" />;\n  }\n  // console.log(choices.map(e => e.choice));\n  return (\n    <div className=\"quiz-wrapper\">\n      <h1>Quiz</h1>\n      <h2>{questions[num].question}</h2>\n      <ol class=\"list-decimal\">\n        {choices.map(answer => (\n          <li key={answer.id}>{answer.choice}</li>\n        ))}\n        {/* <li>answer 1</li>\n        <li>answer 2</li>\n        <li>answer 3</li>\n        <li>answer 4</li> */}\n      </ol>\n      <button onClick={() => setNum(num + 1)}>Next</button>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers\n  };\n};\n\nexport default connect(mapStateToProps, { getQuestions, getAnswers })(Quiz);\n"]},"metadata":{},"sourceType":"module"}
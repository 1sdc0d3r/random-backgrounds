{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Landing.js\";\nimport React from \"react\"; // import { connect } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction Landing() {\n  return React.createElement(\"div\", {\n    className: \"landing-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"flex flex-wrap w-3/6 m-auto mt-20 bg-blue-500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"relative w-full p-10 rounded shadow mb- bg-gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"absolute text-6xl italic text-gray-300 right-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"01\"), React.createElement(\"h2\", {\n    className: \"absolute relative z-10 text-2xl text-gray-900\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Python\"), React.createElement(\"hr\", {\n    className: \"block h-0 mt-5 mb-6 border-t-2 border-red-500 w-\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"text-gray-700\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those!\")))), React.createElement(\"button\", {\n    class: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Start Quiz\")));\n}\n\nexport default Landing; // export default connect(null, {})(Landing);","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Landing.js"],"names":["React","Link","Landing"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,OAAT,GAAmB;AACjB,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,+CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,iDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIE;AAAI,IAAA,SAAS,EAAC,+CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAOE;AAAI,IAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8zBARF,CADF,CADF,CADF,EA6BE;AAAQ,IAAA,KAAK,EAAC,6FAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CA7BF,CADF;AAuCD;;AACD,eAAeA,OAAf,C,CACA","sourcesContent":["import React from \"react\";\n// import { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction Landing() {\n  return (\n    <div className=\"landing-wrapper\">\n      <section className=\"flex flex-wrap w-3/6 m-auto mt-20 bg-blue-500\">\n        <div className=\"flex flex-wrap\">\n          <div className=\"relative w-full p-10 rounded shadow mb- bg-gray\">\n            <span className=\"absolute text-6xl italic text-gray-300 right-10\">\n              01\n            </span>\n            <h2 className=\"absolute relative z-10 text-2xl text-gray-900\">\n              Python\n            </h2>\n            <hr className=\"block h-0 mt-5 mb-6 border-t-2 border-red-500 w-\" />\n            <p className=\"text-gray-700\">\n              Beautiful is better than ugly. Explicit is better than implicit.\n              Simple is better than complex. Complex is better than complicated.\n              Flat is better than nested. Sparse is better than dense.\n              Readability counts. Special cases aren't special enough to break\n              the rules. Although practicality beats purity. Errors should never\n              pass silently. Unless explicitly silenced. In the face of\n              ambiguity, refuse the temptation to guess. There should be one--\n              and preferably only one --obvious way to do it. Although that way\n              may not be obvious at first unless you're Dutch. Now is better\n              than never. Although never is often better than *right* now. If\n              the implementation is hard to explain, it's a bad idea. If the\n              implementation is easy to explain, it may be a good idea.\n              Namespaces are one honking great idea -- let's do more of those!\n            </p>\n          </div>\n        </div>\n      </section>\n      <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\">\n        <Link to=\"/quiz\">Start Quiz</Link>\n      </button>\n      {/* flex flex-wrap w-3/6 m-auto mt-20 bg-blue-500relative w-full p-10 rounded\n      shadow mb- bg-grayabsolute text-6xl italic text-gray-300 right-10absolute\n      relative z-10 text-2xl text-gray-900block h-0 mt-5 mb-6 border-t-2\n      border-red-500 w-{\" \"} */}\n    </div>\n  );\n}\nexport default Landing;\n// export default connect(null, {})(Landing);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { setScores } from \"../redux/actions/setScores\";\nimport { getTracks } from \"../redux/actions/getTracks\";\nimport { Redirect } from \"react-router-dom\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction Quiz(props) {\n  const {\n    getQuestions,\n    getAnswers,\n    setScores,\n    getTracks,\n    questions,\n    answers,\n    tracks,\n    scores\n  } = props;\n  const [num, setNum] = useState(0);\n  const [currentPoints, setCurrentPoints] = useState({\n    fullstack: 0,\n    ios: 0,\n    android: 0,\n    ux: 0,\n    ds: 0\n  });\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n    getTracks();\n  }, []);\n\n  if (num === questions.length) {\n    // setScores(currentPoints);\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const updatePoints = point => {\n    setScores({ ...scores,\n      fullstack: scores.fullstack + parseFloat(point.fullstack),\n      ios: scores.ios + parseFloat(point.iOS),\n      android: scores.android + parseFloat(point.android),\n      ux: scores.ux + parseFloat(point.UX),\n      ds: scores.ds + parseFloat(point.DS)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-4/5 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"mt-2\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Question \", num + 1), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, questions[num].question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, answers.map(answer => {\n    if (answer.question_id === questions[num].id) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: answer.id,\n        onClick: () => {\n          const point = tracks.find(track => track.answer_id === answer.id);\n          setNum(num + 1);\n          updatePoints(point);\n        },\n        className: \"hover:bg-red-500  w-1/2 p-1 m-auto text-left\" // hover:border-4 hover:border-solid hover:border-black hover:rounded-md\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, answer.choice);\n    }\n  })), /*#__PURE__*/React.createElement(ProgressBar, {\n    progress: `${questions[num].id}/${questions.length}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers,\n    tracks: state.tracks,\n    scores: state.scores\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getQuestions,\n  getAnswers,\n  setScores,\n  getTracks\n})(Quiz);","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js"],"names":["React","useState","useEffect","connect","getQuestions","getAnswers","setScores","getTracks","Redirect","ProgressBar","Quiz","props","questions","answers","tracks","scores","num","setNum","currentPoints","setCurrentPoints","fullstack","ios","android","ux","ds","length","updatePoints","point","parseFloat","iOS","UX","DS","question","map","answer","question_id","id","find","track","answer_id","choice","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { setScores } from \"../redux/actions/setScores\";\nimport { getTracks } from \"../redux/actions/getTracks\";\nimport { Redirect } from \"react-router-dom\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction Quiz(props) {\n  const {\n    getQuestions,\n    getAnswers,\n    setScores,\n    getTracks,\n    questions,\n    answers,\n    tracks,\n    scores\n  } = props;\n\n  const [num, setNum] = useState(0);\n\n  const [currentPoints, setCurrentPoints] = useState({\n    fullstack: 0,\n    ios: 0,\n    android: 0,\n    ux: 0,\n    ds: 0\n  });\n\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n    getTracks();\n  }, []);\n\n  if (num === questions.length) {\n    // setScores(currentPoints);\n    return <Redirect to=\"/results\" />;\n  }\n  const updatePoints = point => {\n    setScores({\n      ...scores,\n      fullstack: scores.fullstack + parseFloat(point.fullstack),\n      ios: scores.ios + parseFloat(point.iOS),\n      android: scores.android + parseFloat(point.android),\n      ux: scores.ux + parseFloat(point.UX),\n      ds: scores.ds + parseFloat(point.DS)\n    });\n  };\n  return (\n    <div className=\"w-4/5 m-auto\">\n      <h1 mt-2>Question {num + 1}</h1>\n      <h2>{questions[num].question}</h2>\n\n      <div className=\"flex flex-col m-4\">\n        {answers.map(answer => {\n          if (answer.question_id === questions[num].id) {\n            return (\n              <button\n                key={answer.id}\n                onClick={() => {\n                  const point = tracks.find(\n                    track => track.answer_id === answer.id\n                  );\n                  setNum(num + 1);\n                  updatePoints(point);\n                }}\n                className=\"hover:bg-red-500  w-1/2 p-1 m-auto text-left\"\n                // hover:border-4 hover:border-solid hover:border-black hover:rounded-md\n              >\n                {answer.choice}\n              </button>\n            );\n          }\n        })}\n      </div>\n      <ProgressBar progress={`${questions[num].id}/${questions.length}`} />\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers,\n    tracks: state.tracks,\n    scores: state.scores\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getQuestions,\n  getAnswers,\n  setScores,\n  getTracks\n})(Quiz);\n"]},"metadata":{},"sourceType":"module"}
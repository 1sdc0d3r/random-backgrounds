{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/BarGraph.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\n\nfunction BarGraph({\n  scores\n}) {\n  const data = [];\n\n  for (const track in scores) {\n    data.push({\n      track: track,\n      score: scores[track]\n    });\n  }\n\n  return React.createElement(BarChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"track\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    dataKey: \"score\",\n    fill: \"#f56565\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    scores: state.scores\n  };\n};\n\nexport default connect(mapStateToProps, {})(BarGraph);","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/BarGraph.js"],"names":["React","connect","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","BarGraph","scores","data","track","push","score","top","right","left","bottom","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,aANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;;AAWA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA8B;AAC5B,QAAMC,IAAI,GAAG,EAAb;;AAEA,OAAK,MAAMC,KAAX,IAAoBF,MAApB,EAA4B;AAC1BC,IAAAA,IAAI,CAACE,IAAL,CAAU;AAAED,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,KAAK,EAAEJ,MAAM,CAACE,KAAD;AAA7B,KAAV;AACD;;AACD,SACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,MAAM,EAAE;AACNI,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD;;AACD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,MAAM,EAAEU,KAAK,CAACV;AADT,GAAP;AAGD,CAJD;;AAKA,eAAeV,OAAO,CAACmB,eAAD,EAAkB,EAAlB,CAAP,CAA6BV,QAA7B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nfunction BarGraph({ scores }) {\n  const data = [];\n\n  for (const track in scores) {\n    data.push({ track: track, score: scores[track] });\n  }\n  return (\n    <BarChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"track\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"score\" fill=\"#f56565\" />\n    </BarChart>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    scores: state.scores\n  };\n};\nexport default connect(mapStateToProps, {})(BarGraph);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/BarGraph.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\n\nfunction BarGraph({\n  scores\n}) {\n  const data = [{\n    track: \"test\",\n    score: 17,\n    color: \"blue\"\n  }, {\n    track: \"test2\",\n    score: 14,\n    color: \"green\"\n  }];\n\n  for (const track in scores) {\n    data.push({\n      track: track,\n      score: scores[track],\n      color: \"#f56565\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(BarChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"track\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"score\",\n    fill: \"#f56565\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    scores: state.scores\n  };\n};\n\nexport default connect(mapStateToProps, {})(BarGraph);","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/BarGraph.js"],"names":["React","connect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","BarGraph","scores","data","track","score","color","push","top","right","left","bottom","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;;AAUA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA8B;AAC5B,QAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE,EAAxB;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GADW,EAEX;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE,EAAzB;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAFW,CAAb;;AAKA,OAAK,MAAMF,KAAX,IAAoBF,MAApB,EAA4B;AAC1BC,IAAAA,IAAI,CAACI,IAAL,CAAU;AAAEH,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,KAAK,EAAEH,MAAM,CAACE,KAAD,CAA7B;AAAsCE,MAAAA,KAAK,EAAE;AAA7C,KAAV;AACD;;AAED,sBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,MAAM,EAAE;AACNK,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAgBE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD;;AACD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,MAAM,EAAEW,KAAK,CAACX;AADT,GAAP;AAGD,CAJD;;AAKA,eAAeT,OAAO,CAACmB,eAAD,EAAkB,EAAlB,CAAP,CAA6BX,QAA7B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nfunction BarGraph({ scores }) {\n  const data = [\n    { track: \"test\", score: 17, color: \"blue\" },\n    { track: \"test2\", score: 14, color: \"green\" }\n  ];\n\n  for (const track in scores) {\n    data.push({ track: track, score: scores[track], color: \"#f56565\" });\n  }\n\n  return (\n    <BarChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"track\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"score\" fill=\"#f56565\" />\n    </BarChart>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    scores: state.scores\n  };\n};\nexport default connect(mapStateToProps, {})(BarGraph);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Quiz(props) {\n  const {\n    getQuestions,\n    getAnswers,\n    questions,\n    answers\n  } = props;\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n  }, []);\n  const [num, setNum] = useState(0);\n  const [choices, setChoices] = useState([]);\n  useEffect(() => {\n    setChoices();\n  }, [num]); //  answers.map(choice => {\n  //    if (choice.question_id === questions[num].id) {\n  //      return choice.choice;\n  //    }\n  //  });\n\n  if (num === questions.length) {\n    return React.createElement(Redirect, {\n      to: \"/results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  } // if (questions[num].question) {\n  //   console.log(`question:${questions[num].id}`);\n  //   answers.map(e => {\n  //     if (e.question_id === questions[num].id) {\n  //       return console.log(e.choice);\n  //     }\n  //   });\n  // }\n\n\n  console.log({\n    choices\n  });\n  return React.createElement(\"div\", {\n    className: \"quiz-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Quiz\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, questions[num].question), React.createElement(\"button\", {\n    onClick: () => setNum(num + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Next\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getQuestions,\n  getAnswers\n})(Quiz);","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js"],"names":["React","useState","useEffect","connect","getQuestions","getAnswers","Redirect","Quiz","props","questions","answers","num","setNum","choices","setChoices","length","console","log","question","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEJ,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BI,IAAAA,SAA5B;AAAuCC,IAAAA;AAAvC,MAAmDF,KAAzD;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY;AACZC,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACH,GAAD,CAFM,CAAT,CAVmB,CAanB;AACA;AACA;AACA;AACA;;AAEA,MAAIA,GAAG,KAAKF,SAAS,CAACM,MAAtB,EAA8B;AAC5B,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GArBkB,CAsBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA;AAAF,GAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,SAAS,CAACE,GAAD,CAAT,CAAeO,QAApB,CAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMN,MAAM,CAACD,GAAG,GAAG,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOD;;AACD,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLX,IAAAA,SAAS,EAAEW,KAAK,CAACX,SADZ;AAELC,IAAAA,OAAO,EAAEU,KAAK,CAACV;AAFV,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAAuDE,IAAvD,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Quiz(props) {\n  const { getQuestions, getAnswers, questions, answers } = props;\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n  }, []);\n\n  const [num, setNum] = useState(0);\n  const [choices, setChoices] = useState([]);\n\n  useEffect(() => {\n    setChoices();\n  }, [num]);\n  //  answers.map(choice => {\n  //    if (choice.question_id === questions[num].id) {\n  //      return choice.choice;\n  //    }\n  //  });\n\n  if (num === questions.length) {\n    return <Redirect to=\"/results\" />;\n  }\n  // if (questions[num].question) {\n  //   console.log(`question:${questions[num].id}`);\n  //   answers.map(e => {\n  //     if (e.question_id === questions[num].id) {\n  //       return console.log(e.choice);\n  //     }\n  //   });\n  // }\n  console.log({ choices });\n  return (\n    <div className=\"quiz-wrapper\">\n      <h1>Quiz</h1>\n      <h2>{questions[num].question}</h2>\n      <button onClick={() => setNum(num + 1)}>Next</button>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers\n  };\n};\n\nexport default connect(mapStateToProps, { getQuestions, getAnswers })(Quiz);\n"]},"metadata":{},"sourceType":"module"}
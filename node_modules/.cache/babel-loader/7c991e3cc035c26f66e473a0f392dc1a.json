{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Quiz(props) {\n  const {\n    getQuestions,\n    getAnswers,\n    questions,\n    answers\n  } = props;\n  const [num, setNum] = useState(0);\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n  }, []);\n\n  if (num === questions.length) {\n    return React.createElement(Redirect, {\n      to: \"/results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"quiz-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Quiz\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, questions[num].question), React.createElement(\"ol\", {\n    className: \"list-decimal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, answers.map(answer => {\n    if (answer.question_id === questions[num].id) {\n      return React.createElement(\"li\", {\n        key: answer.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, answer.choice);\n    }\n  })), React.createElement(\"button\", {\n    onClick: () => setNum(num + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Next\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getQuestions,\n  getAnswers\n})(Quiz);","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/components/Quiz.js"],"names":["React","useState","useEffect","connect","getQuestions","getAnswers","Redirect","Quiz","props","questions","answers","num","setNum","length","question","map","answer","question_id","id","choice","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEJ,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BI,IAAAA,SAA5B;AAAuCC,IAAAA;AAAvC,MAAmDF,KAAzD;AACA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY;AACZC,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIM,GAAG,KAAKF,SAAS,CAACI,MAAtB,EAA8B;AAC5B,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,SAAS,CAACE,GAAD,CAAT,CAAeG,QAApB,CAFF,EAIE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,IAAI;AACrB,QAAIA,MAAM,CAACC,WAAP,KAAuBR,SAAS,CAACE,GAAD,CAAT,CAAeO,EAA1C,EAA8C;AAC5C,aAAO;AAAI,QAAA,GAAG,EAAEF,MAAM,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBF,MAAM,CAACG,MAA5B,CAAP;AACD;AACF,GAJA,CADH,CAJF,EAWE;AAAQ,IAAA,OAAO,EAAE,MAAMP,MAAM,CAACD,GAAG,GAAG,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,CADF;AAeD;;AACD,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLZ,IAAAA,SAAS,EAAEY,KAAK,CAACZ,SADZ;AAELC,IAAAA,OAAO,EAAEW,KAAK,CAACX;AAFV,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAAuDE,IAAvD,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getQuestions } from \"../redux/actions/getQuestions\";\nimport { getAnswers } from \"../redux/actions/getAnswers\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Quiz(props) {\n  const { getQuestions, getAnswers, questions, answers } = props;\n  const [num, setNum] = useState(0);\n\n  useEffect(() => {\n    getQuestions();\n    getAnswers();\n  }, []);\n\n  if (num === questions.length) {\n    return <Redirect to=\"/results\" />;\n  }\n  return (\n    <div className=\"quiz-wrapper\">\n      <h1>Quiz</h1>\n      <h2>{questions[num].question}</h2>\n      {/* //todo change list style  */}\n      <ol className=\"list-decimal\">\n        {answers.map(answer => {\n          if (answer.question_id === questions[num].id) {\n            return <li key={answer.id}>{answer.choice}</li>;\n          }\n        })}\n      </ol>\n      <button onClick={() => setNum(num + 1)}>Next</button>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    questions: state.questions,\n    answers: state.answers\n  };\n};\n\nexport default connect(mapStateToProps, { getQuestions, getAnswers })(Quiz);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { QUESTION_GET_START, QUESTION_GET_SUCCESS, QUESTION_GET_FAIL } from \"../constants\";\nconst initialState = {\n  isFetching: false,\n  questions: [{\n    question: \"question1\"\n  }, {\n    question: \"question2\"\n  }, {\n    question: \"question3\"\n  }],\n  answers: [],\n  error: false\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case QUESTION_GET_START:\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case QUESTION_GET_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        questions: payload\n      };\n\n    case QUESTION_GET_FAIL:\n      return { ...state,\n        isFetching: false,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/redux/reducers/reducer.js"],"names":["QUESTION_GET_START","QUESTION_GET_SUCCESS","QUESTION_GET_FAIL","initialState","isFetching","questions","question","answers","error","state","action","type","payload"],"mappings":"AAAA,SACEA,kBADF,EAEEC,oBAFF,EAGEC,iBAHF,QAIO,cAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,SAAS,EAAE,CACT;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GADS,EAET;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAFS,EAGT;AAAEA,IAAAA,QAAQ,EAAE;AAAZ,GAHS,CAFQ;AAOnBC,EAAAA,OAAO,EAAE,EAPU;AAQnBC,EAAAA,KAAK,EAAE;AARY,CAArB;AAWA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKX,kBAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYL,QAAAA,UAAU,EAAE,IAAxB;AAA8BI,QAAAA,KAAK,EAAE;AAArC,OAAP;;AACF,SAAKP,oBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYL,QAAAA,UAAU,EAAE,KAAxB;AAA+BC,QAAAA,SAAS,EAAEO;AAA1C,OAAP;;AACF,SAAKV,iBAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYL,QAAAA,UAAU,EAAE,KAAxB;AAA+BI,QAAAA,KAAK,EAAEI;AAAtC,OAAP;;AAEF;AACE,aAAOH,KAAP;AATJ;AAWD,CAbD","sourcesContent":["import {\n  QUESTION_GET_START,\n  QUESTION_GET_SUCCESS,\n  QUESTION_GET_FAIL\n} from \"../constants\";\n\nconst initialState = {\n  isFetching: false,\n  questions: [\n    { question: \"question1\" },\n    { question: \"question2\" },\n    { question: \"question3\" }\n  ],\n  answers: [],\n  error: false\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case QUESTION_GET_START:\n      return { ...state, isFetching: true, error: false };\n    case QUESTION_GET_SUCCESS:\n      return { ...state, isFetching: false, questions: payload };\n    case QUESTION_GET_FAIL:\n      return { ...state, isFetching: false, error: payload };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
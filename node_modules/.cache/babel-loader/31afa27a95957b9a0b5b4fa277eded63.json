{"ast":null,"code":"import { QUESTION_GET_START, QUESTION_GET_SUCCESS, QUESTION_GET_FAIL, ANSWER_GET_START, ANSWER_GET_SUCCESS, ANSWER_GET_FAIL, TRACKS_GET_START, TRACKS_GET_SUCCESS, TRACKS_GET_FAIL, SCORE } from \"../constants\";\nconst initialState = {\n  isFetching: false,\n  questions: [{\n    question: \"question1\",\n    id: 1\n  }, {\n    question: \"question2\",\n    id: 2\n  }, {\n    question: \"question3\",\n    id: 3\n  }],\n  answers: [{\n    choice: \"Nulla et pellentesque, facilisis pede\",\n    id: 1,\n    question_id: 1\n  }, {\n    choice: \"This is an answer to the question\",\n    id: 2,\n    question_id: 1\n  }, {\n    choice: \"Nonummy ante pulvinar\",\n    id: 3,\n    question_id: 1\n  }, {\n    choice: \"Lectus leo\",\n    id: 4,\n    question_id: 1\n  }, {\n    choice: \"This is an answer to the question\",\n    id: 5,\n    question_id: 2\n  }, {\n    choice: \"Amet hendrerit amet, diam arcu et\",\n    id: 6,\n    question_id: 2\n  }, {\n    choice: \"Cras eleifend litora, pellentesque donec mus, volutpat libero\",\n    id: 7,\n    question_id: 2\n  }, {\n    choice: \"Elit wisi, et senectus etiam\",\n    id: 8,\n    question_id: 2\n  }, {\n    choice: \"Dolorem possimus, quis ante\",\n    id: 9,\n    question_id: 3\n  }, {\n    choice: \"Orci dapibus\",\n    id: 10,\n    question_id: 3\n  }, {\n    choice: \"This is an answer to the question\",\n    id: 11,\n    question_id: 3\n  }, {\n    choice: \"Nisl convallis ut, primis nisl, sed mollis purus\",\n    id: 12,\n    question_id: 3\n  }],\n  TRACKS: [],\n  scores: {\n    fullstack: 0,\n    ios: 0,\n    android: 0,\n    ux: 0,\n    ds: 0\n  },\n  error: false\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case QUESTION_GET_START:\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case QUESTION_GET_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        questions: payload\n      };\n\n    case QUESTION_GET_FAIL:\n      return { ...state,\n        isFetching: false,\n        error: payload\n      };\n\n    case ANSWER_GET_START:\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case ANSWER_GET_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        answers: payload\n      };\n\n    case ANSWER_GET_FAIL:\n      return { ...state,\n        isFetching: false,\n        error: payload\n      };\n\n    case TRACKS_GET_START:\n      return { ...state,\n        isFetching: true,\n        error: false\n      };\n\n    case TRACKS_GET_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        TRACKS: payload\n      };\n\n    case TRACKS_GET_FAIL:\n      return { ...state,\n        isFetching: false,\n        error: payload\n      };\n\n    case SCORE:\n      return { ...state,\n        scores: payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Braden/Documents/Lambda_FSW/Labs (1-8)/sorting-hat-fe/src/redux/reducers/reducer.js"],"names":["QUESTION_GET_START","QUESTION_GET_SUCCESS","QUESTION_GET_FAIL","ANSWER_GET_START","ANSWER_GET_SUCCESS","ANSWER_GET_FAIL","TRACKS_GET_START","TRACKS_GET_SUCCESS","TRACKS_GET_FAIL","SCORE","initialState","isFetching","questions","question","id","answers","choice","question_id","TRACKS","scores","fullstack","ios","android","ux","ds","error","state","action","type","payload"],"mappings":"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","sourcesContent":["import {\n  QUESTION_GET_START,\n  QUESTION_GET_SUCCESS,\n  QUESTION_GET_FAIL,\n  ANSWER_GET_START,\n  ANSWER_GET_SUCCESS,\n  ANSWER_GET_FAIL,\n  TRACKS_GET_START,\n  TRACKS_GET_SUCCESS,\n  TRACKS_GET_FAIL,\n  SCORE\n} from \"../constants\";\n\nconst initialState = {\n  isFetching: false,\n  questions: [\n    { question: \"question1\", id: 1 },\n    { question: \"question2\", id: 2 },\n    { question: \"question3\", id: 3 }\n  ],\n  answers: [\n    { choice: \"Nulla et pellentesque, facilisis pede\", id: 1, question_id: 1 },\n    { choice: \"This is an answer to the question\", id: 2, question_id: 1 },\n    { choice: \"Nonummy ante pulvinar\", id: 3, question_id: 1 },\n    { choice: \"Lectus leo\", id: 4, question_id: 1 },\n    { choice: \"This is an answer to the question\", id: 5, question_id: 2 },\n    { choice: \"Amet hendrerit amet, diam arcu et\", id: 6, question_id: 2 },\n    {\n      choice: \"Cras eleifend litora, pellentesque donec mus, volutpat libero\",\n      id: 7,\n      question_id: 2\n    },\n    { choice: \"Elit wisi, et senectus etiam\", id: 8, question_id: 2 },\n    { choice: \"Dolorem possimus, quis ante\", id: 9, question_id: 3 },\n    { choice: \"Orci dapibus\", id: 10, question_id: 3 },\n    { choice: \"This is an answer to the question\", id: 11, question_id: 3 },\n    {\n      choice: \"Nisl convallis ut, primis nisl, sed mollis purus\",\n      id: 12,\n      question_id: 3\n    }\n  ],\n  TRACKS: [],\n  scores: {\n    fullstack: 0,\n    ios: 0,\n    android: 0,\n    ux: 0,\n    ds: 0\n  },\n  error: false\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case QUESTION_GET_START:\n      return { ...state, isFetching: true, error: false };\n    case QUESTION_GET_SUCCESS:\n      return { ...state, isFetching: false, questions: payload };\n    case QUESTION_GET_FAIL:\n      return { ...state, isFetching: false, error: payload };\n\n    case ANSWER_GET_START:\n      return { ...state, isFetching: true, error: false };\n    case ANSWER_GET_SUCCESS:\n      return { ...state, isFetching: false, answers: payload };\n    case ANSWER_GET_FAIL:\n      return { ...state, isFetching: false, error: payload };\n\n    case TRACKS_GET_START:\n      return { ...state, isFetching: true, error: false };\n    case TRACKS_GET_SUCCESS:\n      return { ...state, isFetching: false, TRACKS: payload };\n    case TRACKS_GET_FAIL:\n      return { ...state, isFetching: false, error: payload };\n\n    case SCORE:\n      return {\n        ...state,\n        scores: payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}